<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
		>
		
	<!-- 注解自动扫描 -->
	<context:component-scan base-package="demo.cache" />
	
	<!-- springContextHolder -->
	<bean id="springContextHolder" class="demo.cache.spring.SpringContextHolder" lazy-init="false" />
	
	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->
	<bean id="propertyConfigurer" class="demo.cache.util.DecryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 使用file的方式引入，这样可以将配置和代码分离 -->
				<value>application.properties</value>
			</list>
		</property>
	</bean>

	<!-- 1.数据源 DriverManagerDataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://${mysql.ip}:${mysql.port}/${mysql.db}" />
		<property name="username" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
	</bean>

	<!-- 2. mybatis的SqlSession工厂 SqlSessionFactoryBean
			dataSource 引用数据源
			typeAliasespackage 扫描实体类的包名，自动映射实体类的别名
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
		<property name="typeAliasesPackage" value="demo.model"/>
	</bean>
	
	<!-- 3. mybatis自动扫描加载Sql映射文件 MapperScannerConfigure
			basePackage :指定Sql映射文件/接口所在的包（自动扫描）
			sqlSessionFactory : 引用已定义的sqlSessionFactory
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	
		<property name="basePackage" value="demo.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>

	<!-- 4.事务管理 DataSourceTrancationManager
			dataSource 引用已定义的数据源
	-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 5.使用声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 6.jedis 端口、IP -->
	<bean id="jedisClient" class="demo.cache.redis.JedisClient">
		<constructor-arg index="0"  value="${jedis.server.ip}"/>
		<constructor-arg index="1"  value="${jedis.server.port}"/>
	</bean>

</beans>
